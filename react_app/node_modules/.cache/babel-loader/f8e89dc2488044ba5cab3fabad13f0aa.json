{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport TOC from './components/TOC.js';\nimport Subject1 from './components/Subject1.js';\nimport Control from './components/Control.js';\nimport CreateContent from './components/CreateContent.js';\nimport UpdateContent from './components/UpdateContent.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Subject2 extends Component {\n  //state 예제\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: function (e) {\n            e.preventDefault();\n            this.props.onChangePage();\n          }.bind(this),\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), this.props.sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    //초기화 담당\n    super(props);\n    this.max_content_id = 3; //UI영향을 주지 않기 때문에 state값으로 안해도됨. 그냥 value로 만들어 이용하기 \n\n    this.state = {\n      mode: \"create\",\n      //\"main\",\n      selected_content_id: 2,\n      main: {\n        title: \"Welcome\",\n        sub: \"Hello React!\"\n      },\n      subject2: {\n        title: \"WEB\",\n        sub: \"Hello web\"\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: 'HTML is for information'\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: 'CSS is for design'\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: 'JavaScript is for interactive'\n      }]\n    };\n  }\n\n  getReadContent() {\n    var data = this.state.contents[this.state.selected_content_id - 1];\n    return data;\n  }\n\n  getContent() {\n    var _title,\n        _sub,\n        _article,\n        _content = null;\n\n    if (this.state.mode === \"main\") {\n      _title = this.state.main.title;\n      _sub = this.state.main.sub;\n      _article = /*#__PURE__*/_jsxDEV(Subject1, {\n        title: _title,\n        sub: _sub\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === \"read\") {\n      _content = this.getReadContent();\n      _article = /*#__PURE__*/_jsxDEV(Subject1, {\n        title: _content.title,\n        sub: _content.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === \"create\") {\n      _article = /*#__PURE__*/_jsxDEV(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          //add content to this.state.contents\n          this.max_content_id += 1; // this.state.contents.push({id:this.max_content_id, title:_title, desc:_desc}) // 이렇게 state값을 직젒 수정하면 React가 알지 못해서 아무 일도 안일어남\n          // this.setState({\n          //   contents:this.state.contents\n          // }); //React의 성능을 개선하려고 할 때 까다로운 방법.. \n          // push : 원본을 바꿈 , concat : 원본을 변경한 새로운 배열이 return됨 \n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this);\n    } else if (this.state.mode === \"update\") {\n      _article = /*#__PURE__*/_jsxDEV(UpdateContent, {\n        onSubmit: function (_title, _desc) {\n          _content = this.getReadContent();\n\n          var _contents = this.state.contents.concat({\n            id: this.max_content_id,\n            title: _title,\n            desc: _desc\n          });\n\n          this.setState({\n            contents: _contents\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this);\n    }\n\n    return _article;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Subject2, {\n        title: this.state.subject2.title,\n        sub: this.state.subject2.sub,\n        onChangePage: function () {\n          // 우리가 만든 이벤트 \n          this.setState({\n            mode: \"main\"\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TOC, {\n        onChangePage: function (id) {\n          this.setState({\n            mode: \"read\",\n            selected_content_id: id\n          });\n        }.bind(this),\n        data: this.state.contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        onChangeMode: function (_mode) {\n          //이벤트 핸들러\n          console.log(_mode);\n          this.setState({\n            mode: _mode\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), this.getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react_app/src/App.js"],"names":["React","Component","TOC","Subject1","Control","CreateContent","UpdateContent","Subject2","render","e","preventDefault","props","onChangePage","bind","title","sub","App","constructor","max_content_id","state","mode","selected_content_id","main","subject2","contents","id","desc","getReadContent","data","getContent","_title","_sub","_article","_content","_desc","_contents","concat","setState","_mode","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TOC from './components/TOC.js'\nimport Subject1 from './components/Subject1.js'\nimport Control from './components/Control.js'\nimport CreateContent from './components/CreateContent.js';\nimport UpdateContent from './components/UpdateContent.js';\nimport './App.css';\n\nclass Subject2  extends Component { //state 예제\n  render() { \n    return (\n      <header>\n        <h1><a href=\"/\" onClick={function(e){\n          e.preventDefault();\n          this.props.onChangePage();\n        }.bind(this)}>{this.props.title}</a></h1>\n        {this.props.sub}\n    </header>\n    );\n  }\n}\nclass App extends Component {\n  constructor(props){ //초기화 담당\n    super(props);\n    this.max_content_id = 3; //UI영향을 주지 않기 때문에 state값으로 안해도됨. 그냥 value로 만들어 이용하기 \n    this.state = {\n      mode:\"create\",//\"main\",\n      selected_content_id : 2,\n      main:{title:\"Welcome\", sub:\"Hello React!\"},\n      subject2:{title:\"WEB\", sub:\"Hello web\"},\n      contents:[\n        {id:1, title:'HTML', desc:'HTML is for information'},\n        {id:2, title:'CSS', desc:'CSS is for design'},\n        {id:3, title:'JavaScript', desc:'JavaScript is for interactive'}\n      ]\n    }\n  }\n  getReadContent(){\n    var data = this.state.contents[this.state.selected_content_id-1];\n    return data;\n  }\n  getContent(){\n    var _title, _sub, _article, _content= null;\n    if (this.state.mode === \"main\") {\n      _title = this.state.main.title;\n      _sub = this.state.main.sub;\n      _article = <Subject1 title={_title} sub={_sub}></Subject1>\n    } else if(this.state.mode === \"read\") {\n      _content = this.getReadContent();\n      _article = <Subject1 title={_content.title} sub={_content.desc}></Subject1>\n    } else if(this.state.mode === \"create\"){\n      _article = <CreateContent onSubmit={function(_title,_desc){\n          //add content to this.state.contents\n          this.max_content_id +=1;\n          // this.state.contents.push({id:this.max_content_id, title:_title, desc:_desc}) // 이렇게 state값을 직젒 수정하면 React가 알지 못해서 아무 일도 안일어남\n          // this.setState({\n          //   contents:this.state.contents\n          // }); //React의 성능을 개선하려고 할 때 까다로운 방법.. \n          // push : 원본을 바꿈 , concat : 원본을 변경한 새로운 배열이 return됨 \n          var _contents = this.state.contents.concat({id:this.max_content_id, title:_title, desc:_desc});\n          this.setState({\n            contents:_contents\n          });\n      }.bind(this)}></CreateContent>\n    } else if(this.state.mode === \"update\"){\n      _article = <UpdateContent onSubmit={function(_title,_desc){\n          _content = this.getReadContent();\n         \n          var _contents = this.state.contents.concat({id:this.max_content_id, title:_title, desc:_desc});\n          this.setState({\n            contents:_contents\n          });\n      }.bind(this)}></UpdateContent>\n    }\n    return _article;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n     \n      <Subject2\n        title = {this.state.subject2.title}\n        sub = {this.state.subject2.sub}\n        onChangePage = {function(){ // 우리가 만든 이벤트 \n          this.setState({mode:\"main\"})\n        }.bind(this)}>\n       \n      </Subject2>\n      <TOC \n        onChangePage = {function(id){\n          this.setState({\n            mode:\"read\",\n            selected_content_id:id\n            });\n        }.bind(this)}\n        data={this.state.contents}\n      ></TOC>\n      <Control onChangeMode={function(_mode){\n        //이벤트 핸들러\n        console.log(_mode);\n        this.setState({\n          mode:_mode\n        });\n      }.bind(this)}></Control>\n      {this.getContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}